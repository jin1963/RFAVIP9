// js/reward.js
import { displayWeiToToken, getFriendlyErrorMessage } from './utils.js';
import { updateUI } from './app.js'; // ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

export async function loadReferralInfo() {
  if (!window.stakingContract || !window.account || typeof window.kjcDecimals === 'undefined') {
    document.getElementById("yourReferralReward").innerText = "‚ö†Ô∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...";
    console.warn("loadReferralInfo: Contracts or decimals not initialized.");
    return;
  }

  try {
    const rawReferralAmount = await window.stakingContract.methods.referralReward(window.account).call();
    const displayReferral = displayWeiToToken(rawReferralAmount, window.kjcDecimals);

    document.getElementById("yourReferralReward").innerText = `üë• Claimable Referral Reward: ${displayReferral} VIP9`;
  } catch (e) {
    console.error("loadReferralInfo: Error:", e);
    document.getElementById("yourReferralReward").innerText =
      "‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + (e.message || "Unknown error");
    document.getElementById("yourReferralReward").classList.add("error");
  }
}

export async function claimReferralReward() {
  if (!window.stakingContract || !window.account) {
    document.getElementById("referralClaimStatus").innerText = "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏Å‡πà‡∏≠‡∏ô";
    return;
  }

  document.getElementById("referralClaimStatus").innerText = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡πà‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥...";
  document.getElementById("referralClaimStatus").classList.remove("error", "success");

  try {
    const rawClaimable = await window.stakingContract.methods.referralReward(window.account).call();
    if (BigInt(rawClaimable) === BigInt(0)) {
      alert("‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡πà‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏°");
      document.getElementById("referralClaimStatus").innerText = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡πà‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥";
      document.getElementById("referralClaimStatus").classList.add("success");
      return;
    }

    const tx = await window.stakingContract.methods.claimReferralReward().send({ from: window.account });
    const receipt = await window.web3.eth.getTransactionReceipt(tx.transactionHash);

    if (receipt && receipt.status) {
      alert("üéâ ‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡πà‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");
      document.getElementById("referralClaimStatus").innerText = "üéâ ‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡πà‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!";
      document.getElementById("referralClaimStatus").classList.add("success");
      updateUI(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏≥‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°
    } else {
      alert("‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡πà‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏´‡∏£‡∏∑‡∏≠‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò");
      document.getElementById("referralClaimStatus").innerText = "‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!";
      document.getElementById("referralClaimStatus").classList.add("error");
    }
  } catch (e) {
    const errorMessage = getFriendlyErrorMessage(e);
    document.getElementById("referralClaimStatus").innerText = `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${errorMessage}`;
    document.getElementById("referralClaimStatus").classList.add("error");
    alert(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•: ${errorMessage}`);
  }
}
